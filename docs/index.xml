<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>teraskula.com</title>
    <link>https://teraskula.com/</link>
    <description>Recent content on teraskula.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://teraskula.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enhancing AI SRE Capabilities with LangSmith: A Case Study of Cleric</title>
      <link>https://teraskula.com/posts/enhancing-ai-sre-capabilities-with-langsmith-a-case-study-of-cleric/</link>
      <pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>https://teraskula.com/posts/enhancing-ai-sre-capabilities-with-langsmith-a-case-study-of-cleric/</guid>
      <description>&lt;h1 id=&#34;enhancing-ai-sre-capabilities-with-langsmith-a-case-study-of-cleric&#34;&gt;Enhancing AI SRE Capabilities with LangSmith: A Case Study of Cleric&lt;/h1&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In an era where the digital landscape is constantly evolving, the role of Site Reliability Engineers (SREs) has become even more critical. Enter &lt;strong&gt;Cleric&lt;/strong&gt;, an AI-powered SRE that leverages cutting-edge technology to enhance its capabilities in identifying and resolving production issues. This blog post delves into how Cleric has transformed its operational efficiency by utilizing LangSmith&amp;rsquo;s continuous learning framework, ultimately showcasing the necessity of evolving AI tools to meet the demands of modern operations.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Candidate Discovery Demo Qdrant Openai RAG</title>
      <link>https://teraskula.com/posts/candidate-discovery-demo-qdrant-openai/</link>
      <pubDate>Fri, 20 Dec 2024 22:17:10 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/candidate-discovery-demo-qdrant-openai/</guid>
      <description>&lt;h2 id=&#34;candidate-discovery-demo&#34;&gt;Candidate discovery demo&lt;/h2&gt;
&lt;p&gt;In this post will be litle bit technical. continuing what i already created that talk with pdf (RAG).&lt;/p&gt;
&lt;p&gt;combining this &lt;a href=&#34;https://teraskula.com/posts/ollama-chat-from-browser-using-nextjs/&#34;&gt;nextjs from bolt.new chat with ollama&lt;/a&gt; and &lt;a href=&#34;https://teraskula.com/posts/langchain-pdf-ollama-rag/&#34;&gt;langchain for talking with pdf files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;we will slightly re-architec the app user flow design. before, we use FAISS to store our vector. i am afraid it cannot scale (do not know how to scale). so in search of vector databases. i encounter with bunch of option there is pgai (that really take my interest) still in beta, but also qdrant that already have their enterpise option.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ai Generated Content Emmerge</title>
      <link>https://teraskula.com/posts/ai-generated-content-emmerge/</link>
      <pubDate>Thu, 19 Dec 2024 16:25:05 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/ai-generated-content-emmerge/</guid>
      <description>&lt;h2 id=&#34;is-the-internet-still-could-be-trusted-&#34;&gt;is the internet still could be trusted ?&lt;/h2&gt;
&lt;p&gt;Its bothering me in this last couple of month i am seeing or feel seeing and reading AI generated content. it could be text, images or video.
and i wonder if articles or video was took a day to research and write or create, now, could take a couple of minutes? second?&lt;/p&gt;
&lt;h3 id=&#34;content-creation-before-ai&#34;&gt;Content Creation Before AI&lt;/h3&gt;
&lt;p&gt;Before the adoption of AI, content creation relied heavily on human. The years between 2000 and 2020 (maybe) saw a steady rise in content production, driven by the internet Boom
and Social Media Growth, platforms like Facebook, Twitter, and Instagram introduced new opportunities for user-generated content. and TikTok of course.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>10 Important Prompt for Software Engineers</title>
      <link>https://teraskula.com/posts/10-important-prompt-for-software-engineers/</link>
      <pubDate>Mon, 16 Dec 2024 13:25:09 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/10-important-prompt-for-software-engineers/</guid>
      <description>&lt;h3 id=&#34;1-code-refactoring&#34;&gt;1. &lt;strong&gt;Code Refactoring&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Refactor this code to make it cleaner and more Pythonic: &lt;code&gt;{code}&lt;/code&gt;&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Refactor this code: &lt;code&gt;for i in range(len(arr)): print(arr[i])&lt;/code&gt;&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To improve code readability, performance, or adhere to best practices.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; arr:  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(item)  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-bug-fixing&#34;&gt;2. &lt;strong&gt;Bug Fixing&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Fix the bug in this code: &lt;code&gt;{code}&lt;/code&gt; and explain what went wrong.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Fix the bug in this code: &lt;code&gt;x = int(&#39;123a&#39;)&lt;/code&gt;&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To debug and resolve issues in the code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;123a&amp;#39;&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ValueError&lt;/span&gt;:  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid input, cannot convert to integer.&amp;#34;&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-code-generation&#34;&gt;3. &lt;strong&gt;Code Generation&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write a function to &lt;code&gt;{task}&lt;/code&gt; in &lt;code&gt;{language}&lt;/code&gt;.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write a function to reverse a string in Python.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To quickly generate functions or reusable code snippets.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reverse_string&lt;/span&gt;(s):  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; s[::&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(reverse_string(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;))  &lt;span style=&#34;color:#75715e&#34;&gt;# Output: &amp;#34;olleh&amp;#34;  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-write-unit-tests&#34;&gt;4. &lt;strong&gt;Write Unit Tests&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write unit tests for the following function: &lt;code&gt;{code}&lt;/code&gt;.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write unit tests for this function: &lt;code&gt;def add(x, y): return x + y&lt;/code&gt;&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To ensure code behaves as expected through automated tests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; unittest  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(x, y):  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; y  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TestAddFunction&lt;/span&gt;(unittest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;TestCase):  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_add&lt;/span&gt;(self):  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;assertEqual(add(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;assertEqual(add(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unittest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main()  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;5-sql-query-generation&#34;&gt;5. &lt;strong&gt;SQL Query Generation&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write an SQL query to &lt;code&gt;{task}&lt;/code&gt;.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write an SQL query to find all users older than 30.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To create or optimize SQL queries for databases.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; users  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; age &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;6-explain-code&#34;&gt;6. &lt;strong&gt;Explain Code&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Explain what the following code does: &lt;code&gt;{code}&lt;/code&gt;.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Explain this code: &lt;code&gt;for i in range(3): print(i)&lt;/code&gt;&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To clarify or document code for better understanding.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;br&gt;
&lt;em&gt;&amp;ldquo;The loop iterates over values &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;2&lt;/code&gt;, printing each value.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;7-code-conversion&#34;&gt;7. &lt;strong&gt;Code Conversion&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Convert this &lt;code&gt;{source_language}&lt;/code&gt; code to &lt;code&gt;{target_language}&lt;/code&gt;: &lt;code&gt;{code}&lt;/code&gt;.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Convert this Python code to JavaScript: &lt;code&gt;print(&#39;Hello&#39;)&lt;/code&gt;&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To translate code between programming languages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;8-regex-creation&#34;&gt;8. &lt;strong&gt;Regex Creation&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write a regex to &lt;code&gt;{task}&lt;/code&gt;.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write a regex to validate email addresses.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To validate or extract patterns from strings using regular expressions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$  
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;9-generate-api-request-code&#34;&gt;9. &lt;strong&gt;Generate API Request Code&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write code to send a &lt;code&gt;{request_type}&lt;/code&gt; request to &lt;code&gt;{url}&lt;/code&gt; using &lt;code&gt;{language}&lt;/code&gt;.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Write code to send a GET request to &lt;code&gt;https://api.example.com/data&lt;/code&gt; using Python.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To create API integration code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.example.com/data&amp;#34;&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json())  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;10-system-design-suggestions&#34;&gt;10. &lt;strong&gt;System Design Suggestions&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Design a system for &lt;code&gt;{use_case}&lt;/code&gt; and describe its architecture.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prompt with Example&lt;/strong&gt;: &lt;em&gt;&amp;ldquo;Design a system for an image upload service.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What for&lt;/strong&gt;: To outline a scalable system design or architecture.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;br&gt;
&lt;em&gt;&amp;ldquo;Use the following components:&lt;/em&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: AWS S3 for image storage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API&lt;/strong&gt;: Load-balanced servers to handle upload requests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Processing&lt;/strong&gt;: Background worker to resize or process images.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Delivery&lt;/strong&gt;: Use a CDN for fast delivery of images.&amp;rdquo;*&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To be honnest this is created by AI, with &lt;strong&gt;my &amp;lsquo;great&amp;rsquo; prompt&lt;/strong&gt; 😃 . prompting is the key of learning anything now. when it used to be a &lt;strong&gt;google search technique&lt;/strong&gt;.
If content in Internet now somehow could easyly created by AI &lt;strong&gt;is the prompt is actually more important to kmow than the content it self?&lt;/strong&gt;
just wondering.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Important of Technical Discussion</title>
      <link>https://teraskula.com/posts/the-important-of-technical-discussion-rag/</link>
      <pubDate>Fri, 06 Dec 2024 09:44:36 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/the-important-of-technical-discussion-rag/</guid>
      <description>&lt;p&gt;Recently i am creating a blog that code and create RAG pipeline.
Since Langchain (the library that I use) wraps all the functions behind the curtain, some users, like myself, may misunderstand its workings. I want to discuss this part of the code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;build_rag&lt;/span&gt;(vectorstore):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    retriever &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vectorstore&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;as_retriever()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    llm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; OllamaLLM(model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mistral&amp;#34;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# Specify Mistral model&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    qa_chain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; RetrievalQA&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;from_chain_type(llm, retriever&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;retriever)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; qa_chain
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In understanding this code I &lt;em&gt;assume&lt;/em&gt; that when &lt;code&gt;qa_chain = RetrievalQA.from_chain_type(llm, retriever=retriever)&lt;/code&gt; retreiver is vectorstore right?.
i &lt;em&gt;assume again&lt;/em&gt; that llm is actually read the vector.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Langchain PDF Ollama RAG (Retrieval Augmented Generation)</title>
      <link>https://teraskula.com/posts/langchain-pdf-ollama-rag/</link>
      <pubDate>Mon, 02 Dec 2024 23:12:46 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/langchain-pdf-ollama-rag/</guid>
      <description>&lt;h2 id=&#34;give-pdf-and-talk-about-it&#34;&gt;Give PDF and talk about it&lt;/h2&gt;
&lt;h4 id=&#34;using-lanchain-to-perform-rag-using-ollama-embedings-and-faiss-vectorstore&#34;&gt;using lanchain to perform RAG using Ollama embedings and FAISS vectorstore&lt;/h4&gt;
&lt;p&gt;yeah maybe many tools already provide this kind of feature, But this is different, this is about knowing behind the scene. what actually they do to the pdf files? what actually we do to the text in it? and how the LLM is know what context they need?.&lt;/p&gt;
&lt;p&gt;first thing first what is &lt;strong&gt;RAG&lt;/strong&gt;? RAG is &lt;strong&gt;Retrieval Augmented Generation&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ollama Chat From Browser Using Nextjs</title>
      <link>https://teraskula.com/posts/ollama-chat-from-browser-using-nextjs/</link>
      <pubDate>Thu, 21 Nov 2024 00:31:49 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/ollama-chat-from-browser-using-nextjs/</guid>
      <description>&lt;h3 id=&#34;ollama-chat-from-browser-using-nextjs&#34;&gt;Ollama Chat From Browser Using Nextjs&lt;/h3&gt;
&lt;p&gt;This writing will be so small.
it should be a step by step on creating nextjs app that will communicate with local ollama.
the model that i use is mistral its the fastest now running in my local.&lt;/p&gt;
&lt;p&gt;but instead starting from scrath, lets asking help to &lt;a href=&#34;bolt.new&#34;&gt;bolt.new&lt;/a&gt;
to create interface that will communicate with our ollama server in local.&lt;/p&gt;
&lt;p&gt;there is a reason why i learn this. i want to do &amp;hellip;. lets wait for another post 😄&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Running Qwen in M2 Mac Air Machine using Ollama</title>
      <link>https://teraskula.com/posts/running-qwen-in-m2-mac-air-machine/</link>
      <pubDate>Wed, 20 Nov 2024 00:57:25 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/running-qwen-in-m2-mac-air-machine/</guid>
      <description>&lt;h3 id=&#34;running-qwen-25-coder7b-on-macbook-air-m2-using-ollama&#34;&gt;Running qwen-2.5-coder:7B on macbook Air M2 using ollama&lt;/h3&gt;
&lt;p&gt;This is part of stay hungry stay folish mindset, and my interest in AI. Search possible solution to get cheapest code assistant as possible. i was subscribe to copilot but now after found &lt;a href=&#34;https://www.continue.dev/&#34;&gt;continue.dev&lt;/a&gt; + &lt;a href=&#34;https://www.anthropic.com/pricing#anthropic-api&#34;&gt;anthropic&lt;/a&gt; API, thats the current choice.&lt;/p&gt;
&lt;p&gt;Its small decrease in cost. copilot is $10 per month but now i am not that code heavy so subs to token based payment (anthropic claude 3.5 sonnet) is more cost effective. and pay base on what i use.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting Pull Rate Limit and Workaround</title>
      <link>https://teraskula.com/posts/getting-pull-rate-limit/</link>
      <pubDate>Tue, 13 Dec 2022 12:04:51 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/getting-pull-rate-limit/</guid>
      <description>&lt;h1 id=&#34;when-docker-hub-want-you-to-authenticate&#34;&gt;When docker hub want you to authenticate&lt;/h1&gt;
&lt;p&gt;there is a stable system using public images from docker hub. and suddently pull rate limit error is showing up.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://teraskula.com/img/getting-pull-rate-limit-3.png&#34; alt=&#34;Rate Limit Error&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;this-is-how-we-implement-the-workaround&#34;&gt;This is How we implement the Workaround&lt;/h2&gt;
&lt;p&gt;Our system is running in AWS EKS and using all internal image registry (ECR) for application images. Most of application is using docker images and run&amp;rsquo;s on kubernetes.
but some POC and small services is using public images from docker hub. it needs you to authenticate or login to be able to increase the limit.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ChatGPT Open Ai, Is It Scary?</title>
      <link>https://teraskula.com/posts/chatgpt-open-ai-is-it-scary/</link>
      <pubDate>Fri, 09 Dec 2022 15:56:14 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/chatgpt-open-ai-is-it-scary/</guid>
      <description>&lt;h2 id=&#34;chatgpt-is-it-scary&#34;&gt;ChatGPT is it scary?&lt;/h2&gt;
&lt;p&gt;it could be the end of yaml (kubernetes) engineers.&lt;/p&gt;
&lt;p&gt;there is phenomenon. in this time i write this post, i just try the viral AI in a programming world. openAI just released a product, or reasearch, or a robot called &lt;a href=&#34;https://openai.com/blog/chatgpt/&#34;&gt;chatGPT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;they said&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We’ve trained a model called ChatGPT which interacts in a conversational way. The dialogue format makes it possible for ChatGPT to answer followup questions, admit its mistakes, challenge incorrect premises, and reject inappropriate requests. ChatGPT is a sibling model to InstructGPT, which is trained to follow an instruction in a prompt and provide a detailed response.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Argocd Starting Up</title>
      <link>https://teraskula.com/posts/argocd-starting-up/</link>
      <pubDate>Wed, 30 Nov 2022 08:48:47 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/argocd-starting-up/</guid>
      <description>&lt;h2 id=&#34;argo-cd-starting-up&#34;&gt;Argo CD Starting up&lt;/h2&gt;
&lt;p&gt;Recently argocd is graduated from CNCF incubating project.
we already using argocd in production almost 9 months. and its working awesome.&lt;/p&gt;
&lt;h3 id=&#34;installation-getting-started&#34;&gt;Installation getting Started&lt;/h3&gt;
&lt;p&gt;to install argocd and setting this up you could easy follow this (argocd start)[https://argo-cd.readthedocs.io/en/stable/getting_started/]&lt;/p&gt;
&lt;h2 id=&#34;lets-go&#34;&gt;Lets Go&lt;/h2&gt;
&lt;p&gt;I will not explain how to install or how to configure argocd but i will share my experience of using it in production in our usecase.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Layoff Phenomenon 2022</title>
      <link>https://teraskula.com/posts/layoff-phenomenon-2022/</link>
      <pubDate>Fri, 25 Nov 2022 16:38:00 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/layoff-phenomenon-2022/</guid>
      <description>&lt;h2 id=&#34;layoff-2022&#34;&gt;Layoff 2022&lt;/h2&gt;
&lt;p&gt;In the end of the 2022 there is phenomenon called &amp;ldquo;massive layoff&amp;rdquo;, a lot of my friends is impacted during this time. i just wonder what is happening.&lt;/p&gt;
&lt;p&gt;First, i am not an expert in investing, bussiness. but i kind of know (correct me if i am wrong) how to count a profit. its as simple as&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;income - expenses
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;so why the company as big as GoTo or RuangGuru is layoff their employee.
i have hypotesis by my stupid logic.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugo Is Calm Blog Engine</title>
      <link>https://teraskula.com/posts/hugo-is-calm-blog-engine/</link>
      <pubDate>Thu, 24 Nov 2022 17:30:15 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/hugo-is-calm-blog-engine/</guid>
      <description>&lt;h2 id=&#34;hugo-x-github-pages&#34;&gt;Hugo x Github Pages&lt;/h2&gt;
&lt;p&gt;This is my 4th time to redeploy my blog as a note for myself.
deciding using hugo x ghpages because it will be just a note could be a tech note or just random thought.
why hugo is calm?, because its quite simple, its static, it is fun adn quite fast (to generate).&lt;/p&gt;
&lt;h3 id=&#34;hugo&#34;&gt;Hugo&lt;/h3&gt;
&lt;p&gt;what is hugo? Hugo is blog engine that use markdown as their main source of content. generate that markdown file as static site and deploy it.
you could see more about hugo here &lt;a href=&#34;https://gohugo.io/&#34;&gt;https://gohugo.io/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About Teraskula</title>
      <link>https://teraskula.com/posts/about-teraskula/</link>
      <pubDate>Wed, 23 Nov 2022 21:15:30 +0700</pubDate>
      
      <guid>https://teraskula.com/posts/about-teraskula/</guid>
      <description>&lt;h2 id=&#34;about&#34;&gt;About&lt;/h2&gt;
&lt;p&gt;i am prima&lt;/p&gt;
&lt;p&gt;&lt;em&gt;wong biasa, kawulane gusti Allah, anake bapak ibuk, bapake anak anak, bojone bojoku.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Teraskula.com is a new site that hopefully become my tool to release what is in my head.
All this time i just blogging so someone could read my writings.
this time is different.
create this blog to just write what is in my mind.&lt;/p&gt;
&lt;p&gt;so.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;teras | teras, beranda, serambi, petak, anglong, tingkat&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;in English is terrace.
A terrace is an external, raised, open, flat area in either a landscape (such as a park or garden) near a building.
so its the face in a building. sometimes terrace is already inside the building behind the facad.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
